let express,Client;_23c‍.x([["app",()=>app]]);_23c‍.w("express",[["default",["express"],function(v){express=v}]]);_23c‍.w("pg",[["Client",["Client"],function(v){Client=v}]]);




const app = express();


const Database ={
 user: 'postgres',
 host: 'hostlocal',
 database: 'psql',
 password: '21062004',
 port: 5432,
};


const client = new Client(Database);
app.use(express.json());
app.use(express.urlencoded({ extended: false }));





//getters





// const getUsers= async(req,res) =>{
//   const sol = await client.query('SELECT * FROM usuarios');
//   console.log(sol.rows);
// }

//postters

//ingresar usuario

const UserLogin = async(req,res) =>{
  const {email, password} = req.body;
  const sol = await client.query('SELECT email,password FROM usuarios WHERE email = $1 AND password = $2', [email,password]);
  if(sol.rows.length == 1){
    res.json({message:'Usuario logeado exitosamente', body:{user:{email, password}}});
  }else{
    res.json({message:'Error al iniciar sesion'});
  }

}


//crear usuario
const CreateUser = async(req,res) =>{
  const {name, email, password} = req.body;

 try{

const verificador = await client.query('SELECT email FROM usuarios WHERE email = $1', [email]);
if(verificador.rows.length == 1){
  return res.json('El correo ya existe');

 }else{
  const sol = await client.query('INSERT INTO usuarios (name, email, password) VALUES ($1, $2, $3)', [name,email,password]);
  res.json({message:'Usuario creado exitosamente', body:{user:{name, email, password}}});
 }

  }catch(error){
    _23c‍.g.console.log(error);
    res.json({message:'Error interno al crear nuevo usuario'});
  }

}



const ChangePassword = async(req,res) =>{

const{correo, password, newpassword} = req.body;
const verify = await client.query('SELECT email,password FROM usuarios WHERE email = $1 AND password = $2', [email,password]);
if(verify.length ==1){
 
  const action = await client.query('UPDATE usuarios SET password = $1 where email = $2', [newpassword,email])
  res.json({message:'Datos actualizados correctamente'})
}




}





const GetuserName = async(req,res) =>{
  const nombre= req.body.name;

  const sol = await client.query('SELECT usuarios.name FROM usuarios WHERE usuarios.name = $1', [nombre]);
  res.json({message:'Error interno al crear nuevo usuario'});
}



const CreateEvent = async(req,res) =>{
const name = req.body.name;
const fecha = req.body.date;
//const Candidatos = //usar misma tecnica que en la entrega 3, solicitar datos individuales y luego crear un arreglo
//crear la base de datos
const response = await client.query('INSERT INTO eventos name, fecha ');

res.json({message:'Error interno al crear nuevo Evento'});
}



module.exports = {
  getUsers,
  GetuserName,
  CreateEvent
}

